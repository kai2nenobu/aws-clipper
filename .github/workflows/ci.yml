name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: "${{ matrix.OS }}"
    strategy:
      matrix:
        OS: [ubuntu-22.04, macos-12, windows-2022]
        PYTHON: ["3.7", "3.8", "3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Use Python ${{ matrix.PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.PYTHON }}"
      - name: Install poetry
        uses: snok/install-poetry@v1
      - run: poetry self add poetry-dynamic-versioning
      - name: Install dependencies
        run: poetry install --without lint
      - name: Test
        run: make test
  pyinstaller:
    runs-on: "${{ matrix.OS }}"
    strategy:
      matrix:
        OS: [ubuntu-22.04, macos-12, windows-2022]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Python 3.11
        uses: actions/setup-python@v4
        id: cp311
        with:
          python-version: "3.11"
      - name: Install pyinstaller
        run: >-
          pipx install --python '${{ steps.cp311.outputs.python-path }}' pyinstaller
          && pipx inject pyinstaller .
      - name: Build a single executable
        run: pyinstaller ./bin/aws-clipper.py --onefile
        if: runner.os != 'Linux'
      - name: Build a single executable
        run: pyinstaller ./bin/aws-clipper.py --onefile --strip
        if: runner.os == 'Linux'
      - name: Run executable
        run: ./dist/aws-clipper --version
      - uses: actions/upload-artifact@v3
        with:
          name: "pyinstaller-${{ matrix.OS }}"
          path: dist/aws-clipper*
      - name: Upload an executable as release assets for test
        run: gh release upload test-release dist/aws-clipper.exe#aws-clipper.${{ matrix.OS }}.exe --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        if: runner.os == 'Windows'
      - name: Upload an executable as release assets for test
        run: gh release upload test-release dist/aws-clipper#aws-clipper.${{ matrix.OS }} --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        if: runner.os != 'Windows'
